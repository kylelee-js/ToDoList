{"ast":null,"code":"var _jsxFileName = \"/Users/leegihun/Desktop/JS_Practice/ToDoList/src/components/ToDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { atom, useRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst toDoState = atom({\n  key: \"toDo\",\n  default: []\n});\n\nfunction ToDoList() {\n  _s();\n\n  // const [toDo, setToDo] = useState(\"\");\n  // const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n  //   const {\n  //     currentTarget: { value },\n  //   } = event;\n  //   setToDo(value);\n  // };\n  // const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n  //   event.preventDefault();\n  //   // validation is important....\n  //   // if (toDo.length > 140) => error\n  // };\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const {\n    register,\n    watch,\n    handleSubmit,\n    formState,\n    setValue\n  } = useForm(); // watch : onChange같은거\n  // console.log(watch());\n  //formState를 통한 에러 핸들링\n  // console.log(formState.errors);\n  // handleSubmit이 먼저 모든 vaildation을 마친 다음 onVaild 함수를 실행한다.\n\n  const onVaild = _ref => {\n    let {\n      toDo\n    } = _ref;\n    console.log(toDo);\n    setToDos(prev => [{\n      text: toDo,\n      id: Date.now(),\n      category: \"TODO\"\n    }, ...prev]);\n    setValue(\"toDo\", \"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Dos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onVaild),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"What to do?\",\n        ...register(\"toDo\", {\n          required: true,\n          minLength: {\n            value: 5,\n            message: \"too short\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: toDos.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: e.text\n      }, e.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoList, \"02yLNZxtbS+UrSRXFI9AKXD+cMc=\", false, function () {\n  return [useRecoilState, useForm];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/leegihun/Desktop/JS_Practice/ToDoList/src/components/ToDoList.tsx"],"names":["useForm","atom","useRecoilState","toDoState","key","default","ToDoList","toDos","setToDos","register","watch","handleSubmit","formState","setValue","onVaild","toDo","console","log","prev","text","id","Date","now","category","required","minLength","value","message","map","e"],"mappings":";;;AACA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SACEC,IADF,EAEEC,cAFF,QAKO,QALP;;AAOA,MAAMC,SAAS,GAAGF,IAAI,CAAU;AAC9BG,EAAAA,GAAG,EAAE,MADyB;AAE9BC,EAAAA,OAAO,EAAE;AAFqB,CAAV,CAAtB;;AAcA,SAASC,QAAT,GAAoB;AAAA;;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,cAAc,CAACC,SAAD,CAAxC;AACA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,YAAnB;AAAiCC,IAAAA,SAAjC;AAA4CC,IAAAA;AAA5C,MACJb,OAAO,EADT,CAdkB,CAgBlB;AACA;AAEA;AACA;AAEA;;AACA,QAAMc,OAAO,GAAG,QAAqB;AAAA,QAApB;AAAEC,MAAAA;AAAF,KAAoB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAP,IAAAA,QAAQ,CAAEU,IAAD,IAAU,CACjB;AAAEC,MAAAA,IAAI,EAAEJ,IAAR;AAAcK,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAlB;AAA8BC,MAAAA,QAAQ,EAAE;AAAxC,KADiB,EAEjB,GAAGL,IAFc,CAAX,CAAR;AAIAL,IAAAA,QAAQ,CAAC,MAAD,EAAS,EAAT,CAAR;AACD,GAPD;;AASA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEF,YAAY,CAACG,OAAD,CAA5B;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,aADd;AAAA,WAEML,QAAQ,CAAC,MAAD,EAAS;AACnBe,UAAAA,QAAQ,EAAE,IADS;AAEnBC,UAAAA,SAAS,EAAE;AAAEC,YAAAA,KAAK,EAAE,CAAT;AAAYC,YAAAA,OAAO,EAAE;AAArB;AAFQ,SAAT;AAFd;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAA,gBACGpB,KAAK,CAACqB,GAAN,CAAWC,CAAD,iBACT;AAAA,kBAAgBA,CAAC,CAACV;AAAlB,SAASU,CAAC,CAACT,EAAX;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GArDQd,Q;UAamBJ,c,EAExBF,O;;;KAfKM,Q;AAuDT,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  atom,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\n\nconst toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n});\ninterface IForm {\n  toDo: string;\n}\n\ninterface IToDo {\n  text: string;\n  id: number;\n  category: \"DONE\" | \"DOING\" | \"TODO\";\n}\n\nfunction ToDoList() {\n  // const [toDo, setToDo] = useState(\"\");\n  // const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n  //   const {\n  //     currentTarget: { value },\n  //   } = event;\n  //   setToDo(value);\n  // };\n  // const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n  //   event.preventDefault();\n  //   // validation is important....\n  //   // if (toDo.length > 140) => error\n  // };\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const { register, watch, handleSubmit, formState, setValue } =\n    useForm<IForm>();\n  // watch : onChange같은거\n  // console.log(watch());\n\n  //formState를 통한 에러 핸들링\n  // console.log(formState.errors);\n\n  // handleSubmit이 먼저 모든 vaildation을 마친 다음 onVaild 함수를 실행한다.\n  const onVaild = ({ toDo }: IForm) => {\n    console.log(toDo);\n    setToDos((prev) => [\n      { text: toDo, id: Date.now(), category: \"TODO\" },\n      ...prev,\n    ]);\n    setValue(\"toDo\", \"\");\n  };\n\n  return (\n    <div>\n      <h1>To Dos</h1>\n      <form onSubmit={handleSubmit(onVaild)}>\n        <input\n          placeholder=\"What to do?\"\n          {...register(\"toDo\", {\n            required: true,\n            minLength: { value: 5, message: \"too short\" },\n          })}\n        />\n        <button>Add</button>\n      </form>\n\n      <ul>\n        {toDos.map((e) => (\n          <li key={e.id}>{e.text}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}