{"ast":null,"code":"var _jsxFileName = \"/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Categories, toDoState } from \"../atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomCategory = styled.button`\n  border-radius: 50%;\n`;\n_c = CustomCategory;\n\nfunction ToDo(_ref) {\n  _s();\n\n  let {\n    text,\n    category,\n    id,\n    customCategory\n  } = _ref;\n  const [toDos, setToDos] = useRecoilState(toDoState);\n\n  const onClick = name => {\n    setToDos(prev => {\n      const index = prev.findIndex(toDo => toDo.id === id);\n      const front = prev.slice(0, index);\n      const back = prev.slice(index + 1);\n      const newToDo = {\n        text,\n        id,\n        category: name,\n        customCategory\n      };\n      const newArr = [...front, newToDo, ...back];\n      return newArr;\n    });\n    console.log(toDos);\n  };\n\n  const onDelete = () => {\n    setToDos(prev => {\n      const targetIndex = prev.findIndex(toDo => toDo.id === id);\n      const copyToDos = [...prev];\n      copyToDos.splice(targetIndex, 1);\n      return copyToDos;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"* \", text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), category !== Categories.DOING && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: Categories.DOING,\n        onClick: () => onClick(category),\n        children: \"Doing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), category !== Categories.TODO && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: Categories.TODO,\n        onClick: () => onClick(category),\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), category !== Categories.DONE && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: Categories.DONE,\n        onClick: () => onClick(category),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), customCategory && /*#__PURE__*/_jsxDEV(CustomCategory, {\n        children: customCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onDelete,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ToDo, \"5a67h5XNEBDPty+W6+XWtUnHNYw=\", true);\n\n_c2 = ToDo;\nexport default ToDo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomCategory\");\n$RefreshReg$(_c2, \"ToDo\");","map":{"version":3,"sources":["/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDo.tsx"],"names":["React","styled","Categories","toDoState","CustomCategory","button","ToDo","text","category","id","customCategory","toDos","setToDos","useRecoilState","onClick","name","prev","index","findIndex","toDo","front","slice","back","newToDo","newArr","console","log","onDelete","targetIndex","copyToDos","splice","DOING","TODO","DONE"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,EAAiDC,SAAjD,QAAkE,UAAlE;;;AAEA,MAAMC,cAAc,GAAGH,MAAM,CAACI,MAAO;AACrC;AACA,CAFA;KAAMD,c;;AAIN,SAASE,IAAT,OAA6D;AAAA;;AAAA,MAA/C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,EAAlB;AAAsBC,IAAAA;AAAtB,GAA+C;AAC3D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,cAAc,CAACV,SAAD,CAAxC;;AACA,QAAMW,OAAO,GAAIC,IAAD,IAA6B;AAC3CH,IAAAA,QAAQ,CAAEI,IAAD,IAAU;AACjB,YAAMC,KAAK,GAAGD,IAAI,CAACE,SAAL,CAAgBC,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYA,EAArC,CAAd;AAEA,YAAMW,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcJ,KAAd,CAAd;AACA,YAAMK,IAAI,GAAGN,IAAI,CAACK,KAAL,CAAWJ,KAAK,GAAG,CAAnB,CAAb;AACA,YAAMM,OAAO,GAAG;AAAEhB,QAAAA,IAAF;AAAQE,QAAAA,EAAR;AAAYD,QAAAA,QAAQ,EAAEO,IAAtB;AAA4BL,QAAAA;AAA5B,OAAhB;AACA,YAAMc,MAAM,GAAG,CAAC,GAAGJ,KAAJ,EAAWG,OAAX,EAAoB,GAAGD,IAAvB,CAAf;AACA,aAAOE,MAAP;AACD,KARO,CAAR;AASAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACD,GAXD;;AAaA,QAAMgB,QAAQ,GAAG,MAAM;AACrBf,IAAAA,QAAQ,CAAEI,IAAD,IAAU;AACjB,YAAMY,WAAW,GAAGZ,IAAI,CAACE,SAAL,CAAgBC,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYA,EAArC,CAApB;AACA,YAAMoB,SAAS,GAAG,CAAC,GAAGb,IAAJ,CAAlB;AACAa,MAAAA,SAAS,CAACC,MAAV,CAAiBF,WAAjB,EAA8B,CAA9B;AACA,aAAOC,SAAP;AACD,KALO,CAAR;AAMD,GAPD;;AAQA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,yBAAStB,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,QAAQ,KAAKN,UAAU,CAAC6B,KAAxB,iBACC;AAAQ,QAAA,IAAI,EAAE7B,UAAU,CAAC6B,KAAzB;AAAgC,QAAA,OAAO,EAAE,MAAMjB,OAAO,CAACN,QAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAOGA,QAAQ,KAAKN,UAAU,CAAC8B,IAAxB,iBACC;AAAQ,QAAA,IAAI,EAAE9B,UAAU,CAAC8B,IAAzB;AAA+B,QAAA,OAAO,EAAE,MAAMlB,OAAO,CAACN,QAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,EAYGA,QAAQ,KAAKN,UAAU,CAAC+B,IAAxB,iBACC;AAAQ,QAAA,IAAI,EAAE/B,UAAU,CAAC+B,IAAzB;AAA+B,QAAA,OAAO,EAAE,MAAMnB,OAAO,CAACN,QAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,EAiBGE,cAAc,iBAAI,QAAC,cAAD;AAAA,kBAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,cAjBrB,eAkBE;AAAQ,QAAA,OAAO,EAAEiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAwBD;;GA/CQrB,I;;MAAAA,I;AAiDT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { Categories, customCategoryState, IToDo, toDoState } from \"../atoms\";\n\nconst CustomCategory = styled.button`\n  border-radius: 50%;\n`;\n\nfunction ToDo({ text, category, id, customCategory }: IToDo) {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const onClick = (name: IToDo[\"category\"]) => {\n    setToDos((prev) => {\n      const index = prev.findIndex((toDo) => toDo.id === id);\n\n      const front = prev.slice(0, index);\n      const back = prev.slice(index + 1);\n      const newToDo = { text, id, category: name, customCategory };\n      const newArr = [...front, newToDo, ...back];\n      return newArr;\n    });\n    console.log(toDos);\n  };\n\n  const onDelete = () => {\n    setToDos((prev) => {\n      const targetIndex = prev.findIndex((toDo) => toDo.id === id);\n      const copyToDos = [...prev];\n      copyToDos.splice(targetIndex, 1);\n      return copyToDos;\n    });\n  };\n  return (\n    <>\n      <li>\n        <span>* {text}</span>\n        {category !== Categories.DOING && (\n          <button name={Categories.DOING} onClick={() => onClick(category)}>\n            Doing\n          </button>\n        )}\n        {category !== Categories.TODO && (\n          <button name={Categories.TODO} onClick={() => onClick(category)}>\n            To Do\n          </button>\n        )}\n        {category !== Categories.DONE && (\n          <button name={Categories.DONE} onClick={() => onClick(category)}>\n            Done\n          </button>\n        )}\n        {customCategory && <CustomCategory>{customCategory}</CustomCategory>}\n        <button onClick={onDelete}>X</button>\n      </li>\n    </>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}