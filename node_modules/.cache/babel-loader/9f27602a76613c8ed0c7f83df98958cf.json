{"ast":null,"code":"import{atom,selector}from\"recoil\";var storedToDo=localStorage.getItem(\"storedToDo\");var loadedToDo=JSON.parse(storedToDo);export var Categories;(function(Categories){Categories[\"TODO\"]=\"TODO\";Categories[\"DOING\"]=\"DOING\";Categories[\"DONE\"]=\"DONE\";})(Categories||(Categories={}));export var categoryState=atom({key:\"category\",default:Categories.TODO});export var customCategoryState=atom({key:\"customCategory\",default:[]});export var toDoState=atom({key:\"toDo\",default:loadedToDo||[]});export var toDoSelector=selector({key:\"toDoSelector\",get:function get(_ref){var _get=_ref.get;var toDos=_get(toDoState);var category=_get(categoryState);return toDos.filter(function(toDo){return toDo.category===category;});}});export var categorySelector=selector({key:\"categorySelector\",get:function get(_ref2){var _get2=_ref2.get;var cate=_get2(categoryState);return[];}});","map":{"version":3,"sources":["/Users/leegihun/Documents/JS_Practice/ToDoList/src/atoms.ts"],"names":["atom","selector","storedToDo","localStorage","getItem","loadedToDo","JSON","parse","Categories","categoryState","key","default","TODO","customCategoryState","toDoState","toDoSelector","get","toDos","category","filter","toDo","categorySelector","cate"],"mappings":"AAAA,OAASA,IAAT,CAAeC,QAAf,KAA+B,QAA/B,CAEA,GAAMC,CAAAA,UAAU,CAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB,CACA,GAAMC,CAAAA,UAAU,CAAGC,IAAI,CAACC,KAAL,CAAWL,UAAX,CAAnB,CAGA,UAAYM,CAAAA,UAAZ,C,UAAYA,U,EAAAA,U,gBAAAA,U,kBAAAA,U,mBAAAA,U,GAAAA,U,MAaZ,MAAO,IAAMC,CAAAA,aAAa,CAAGT,IAAI,CAAa,CAC5CU,GAAG,CAAE,UADuC,CAE5CC,OAAO,CAAEH,UAAU,CAACI,IAFwB,CAAb,CAA1B,CAKP,MAAO,IAAMC,CAAAA,mBAAmB,CAAGb,IAAI,CAAW,CAChDU,GAAG,CAAE,gBAD2C,CAEhDC,OAAO,CAAE,EAFuC,CAAX,CAAhC,CAKP,MAAO,IAAMG,CAAAA,SAAS,CAAGd,IAAI,CAAU,CACrCU,GAAG,CAAE,MADgC,CAErCC,OAAO,CAAEN,UAAU,EAAI,EAFc,CAAV,CAAtB,CAKP,MAAO,IAAMU,CAAAA,YAAY,CAAGd,QAAQ,CAAC,CACnCS,GAAG,CAAE,cAD8B,CAEnCM,GAAG,CAAE,kBAAa,IAAVA,CAAAA,IAAU,MAAVA,GAAU,CAChB,GAAMC,CAAAA,KAAK,CAAGD,IAAG,CAACF,SAAD,CAAjB,CACA,GAAMI,CAAAA,QAAQ,CAAGF,IAAG,CAACP,aAAD,CAApB,CACA,MAAOQ,CAAAA,KAAK,CAACE,MAAN,CAAa,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACF,QAAL,GAAkBA,QAA5B,EAAb,CAAP,CACD,CANkC,CAAD,CAA7B,CASP,MAAO,IAAMG,CAAAA,gBAAgB,CAAGpB,QAAQ,CAAC,CACvCS,GAAG,CAAE,kBADkC,CAEvCM,GAAG,CAAE,mBAAa,IAAVA,CAAAA,KAAU,OAAVA,GAAU,CAChB,GAAMM,CAAAA,IAAI,CAAGN,KAAG,CAACP,aAAD,CAAhB,CACA,MAAO,EAAP,CACD,CALsC,CAAD,CAAjC","sourcesContent":["import { atom, selector } from \"recoil\";\n\nconst storedToDo = localStorage.getItem(\"storedToDo\");\nconst loadedToDo = JSON.parse(storedToDo as string);\n\ntype categories = \"DONE\" | \"DOING\" | \"TODO\";\nexport enum Categories {\n  \"TODO\" = \"TODO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\",\n}\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: Categories;\n  customCategory?: string;\n}\n\nexport const categoryState = atom<Categories>({\n  key: \"category\",\n  default: Categories.TODO,\n});\n\nexport const customCategoryState = atom<string[]>({\n  key: \"customCategory\",\n  default: [],\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: loadedToDo || [],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n\nexport const categorySelector = selector({\n  key: \"categorySelector\",\n  get: ({ get }) => {\n    const cate = get(categoryState);\n    return [];\n  },\n});\n"]},"metadata":{},"sourceType":"module"}