{"ast":null,"code":"var _jsxFileName = \"/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { customCategoryState, toDoState } from \"../atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomCategory = styled.button`\n  border-radius: 50%;\n  background-color: whitesmoke;\n`;\n\nfunction ToDo(_ref) {\n  _s();\n\n  let {\n    text,\n    category,\n    id\n  } = _ref;\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const [categories, setCustomeCategory] = useRecoilState(customCategoryState);\n  console.log(categories);\n\n  const onClick = event => {\n    const {\n      currentTarget: {\n        name\n      }\n    } = event;\n    setToDos(prev => {\n      const index = prev.findIndex(toDo => toDo.id === id);\n      const front = prev.slice(0, index);\n      const back = prev.slice(index + 1);\n      const newToDo = {\n        text,\n        id,\n        category: name\n      };\n      const newArr = [...front, newToDo, ...back];\n      return newArr;\n    });\n  };\n\n  const onDelete = () => {\n    setToDos(prev => {\n      const targetIndex = prev.findIndex(toDo => toDo.id === id);\n      const copyToDos = [...prev];\n      copyToDos.splice(targetIndex, 1);\n      return copyToDos;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"* \", text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), category !== \"DOING\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"DOING\",\n        onClick: onClick,\n        children: \"Doing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), category !== \"TODO\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"TODO\",\n        onClick: onClick,\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), category !== \"DONE\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"DONE\",\n        onClick: onClick,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onDelete,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ToDo, \"gq9eo4vd19mkxBJu4HUjXv22LH0=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDo.tsx"],"names":["React","useRecoilState","styled","customCategoryState","toDoState","CustomCategory","button","ToDo","text","category","id","toDos","setToDos","categories","setCustomeCategory","console","log","onClick","event","currentTarget","name","prev","index","findIndex","toDo","front","slice","back","newToDo","newArr","onDelete","targetIndex","copyToDos","splice"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAAkE,QAAlE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,mBAAT,EAAqCC,SAArC,QAAsD,UAAtD;;;AAEA,MAAMC,cAAc,GAAGH,MAAM,CAACI,MAAO;AACrC;AACA;AACA,CAHA;;AAKA,SAASC,IAAT,OAA6C;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAA+B;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,cAAc,CAACG,SAAD,CAAxC;AACA,QAAM,CAACS,UAAD,EAAaC,kBAAb,IAAmCb,cAAc,CAACE,mBAAD,CAAvD;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;;AACA,QAAMI,OAAO,GAAIC,KAAD,IAAgD;AAC9D,UAAM;AACJC,MAAAA,aAAa,EAAE;AAAEC,QAAAA;AAAF;AADX,QAEFF,KAFJ;AAGAN,IAAAA,QAAQ,CAAES,IAAD,IAAU;AACjB,YAAMC,KAAK,GAAGD,IAAI,CAACE,SAAL,CAAgBC,IAAD,IAAUA,IAAI,CAACd,EAAL,KAAYA,EAArC,CAAd;AAEA,YAAMe,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcJ,KAAd,CAAd;AACA,YAAMK,IAAI,GAAGN,IAAI,CAACK,KAAL,CAAWJ,KAAK,GAAG,CAAnB,CAAb;AACA,YAAMM,OAAO,GAAG;AAAEpB,QAAAA,IAAF;AAAQE,QAAAA,EAAR;AAAYD,QAAAA,QAAQ,EAAEW;AAAtB,OAAhB;AACA,YAAMS,MAAM,GAAG,CAAC,GAAGJ,KAAJ,EAAWG,OAAX,EAAoB,GAAGD,IAAvB,CAAf;AACA,aAAOE,MAAP;AACD,KARO,CAAR;AASD,GAbD;;AAeA,QAAMC,QAAQ,GAAG,MAAM;AACrBlB,IAAAA,QAAQ,CAAES,IAAD,IAAU;AACjB,YAAMU,WAAW,GAAGV,IAAI,CAACE,SAAL,CAAgBC,IAAD,IAAUA,IAAI,CAACd,EAAL,KAAYA,EAArC,CAApB;AACA,YAAMsB,SAAS,GAAG,CAAC,GAAGX,IAAJ,CAAlB;AACAW,MAAAA,SAAS,CAACC,MAAV,CAAiBF,WAAjB,EAA8B,CAA9B;AACA,aAAOC,SAAP;AACD,KALO,CAAR;AAMD,GAPD;;AAQA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,yBAASxB,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,QAAQ,KAAK,OAAb,iBACC;AAAQ,QAAA,IAAI,EAAE,OAAd;AAAuB,QAAA,OAAO,EAAEQ,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAOGR,QAAQ,KAAK,MAAb,iBACC;AAAQ,QAAA,IAAI,EAAE,MAAd;AAAsB,QAAA,OAAO,EAAEQ,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,EAYGR,QAAQ,KAAK,MAAb,iBACC;AAAQ,QAAA,IAAI,EAAE,MAAd;AAAsB,QAAA,OAAO,EAAEQ,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAiBE;AAAQ,QAAA,OAAO,EAAEa,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBD;;GAlDQvB,I;UACmBN,c,EACeA,c;;;KAFlCM,I;AAoDT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { customCategoryState, IToDo, toDoState } from \"../atoms\";\n\nconst CustomCategory = styled.button`\n  border-radius: 50%;\n  background-color: whitesmoke;\n`;\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const [categories, setCustomeCategory] = useRecoilState(customCategoryState);\n  console.log(categories);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((prev) => {\n      const index = prev.findIndex((toDo) => toDo.id === id);\n\n      const front = prev.slice(0, index);\n      const back = prev.slice(index + 1);\n      const newToDo = { text, id, category: name as any };\n      const newArr = [...front, newToDo, ...back];\n      return newArr;\n    });\n  };\n\n  const onDelete = () => {\n    setToDos((prev) => {\n      const targetIndex = prev.findIndex((toDo) => toDo.id === id);\n      const copyToDos = [...prev];\n      copyToDos.splice(targetIndex, 1);\n      return copyToDos;\n    });\n  };\n  return (\n    <>\n      <li>\n        <span>* {text}</span>\n        {category !== \"DOING\" && (\n          <button name={\"DOING\"} onClick={onClick}>\n            Doing\n          </button>\n        )}\n        {category !== \"TODO\" && (\n          <button name={\"TODO\"} onClick={onClick}>\n            To Do\n          </button>\n        )}\n        {category !== \"DONE\" && (\n          <button name={\"DONE\"} onClick={onClick}>\n            Done\n          </button>\n        )}\n        <button onClick={onDelete}>X</button>\n      </li>\n    </>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}