{"ast":null,"code":"import { atom, selector } from \"recoil\";\nconst storedToDo = localStorage.getItem(\"storedToDo\");\nconst loadedToDo = JSON.parse(storedToDo);\nexport const categoryState = atom({\n  key: \"category\",\n  default: \"TODO\"\n});\nexport const customCategoryState = atom({\n  key: \"customCategory\",\n  default: [{\n    category: \"TODO\"\n  }, {\n    category: \"DOING\"\n  }, {\n    category: \"DONE\"\n  }]\n});\nexport const toDoState = atom({\n  key: \"toDo\",\n  default: loadedToDo || []\n});\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: _ref => {\n    let {\n      get\n    } = _ref;\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter(toDo => toDo.category === category);\n  }\n});\nexport const categorySelector = selector({\n  key: \"categorySelector\",\n  get: _ref2 => {\n    let {\n      get\n    } = _ref2;\n    const cate = get(categoryState);\n    return [];\n  }\n});","map":{"version":3,"sources":["/Users/leegihun/Documents/JS_Practice/ToDoList/src/atoms.ts"],"names":["atom","selector","storedToDo","localStorage","getItem","loadedToDo","JSON","parse","categoryState","key","default","customCategoryState","category","toDoState","toDoSelector","get","toDos","filter","toDo","categorySelector","cate"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AAEA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;AACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,UAAX,CAAnB;AAmBA,OAAO,MAAMM,aAAa,GAAGR,IAAI,CAAS;AACxCS,EAAAA,GAAG,EAAE,UADmC;AAExCC,EAAAA,OAAO,EAAE;AAF+B,CAAT,CAA1B;AAKP,OAAO,MAAMC,mBAAmB,GAAGX,IAAI,CAAoB;AACzDS,EAAAA,GAAG,EAAE,gBADoD;AAEzDC,EAAAA,OAAO,EAAE,CAAC;AAAEE,IAAAA,QAAQ,EAAE;AAAZ,GAAD,EAAuB;AAAEA,IAAAA,QAAQ,EAAE;AAAZ,GAAvB,EAA8C;AAAEA,IAAAA,QAAQ,EAAE;AAAZ,GAA9C;AAFgD,CAApB,CAAhC;AAKP,OAAO,MAAMC,SAAS,GAAGb,IAAI,CAAU;AACrCS,EAAAA,GAAG,EAAE,MADgC;AAErCC,EAAAA,OAAO,EAAEL,UAAU,IAAI;AAFc,CAAV,CAAtB;AAKP,OAAO,MAAMS,YAAY,GAAGb,QAAQ,CAAC;AACnCQ,EAAAA,GAAG,EAAE,cAD8B;AAEnCM,EAAAA,GAAG,EAAE,QAAa;AAAA,QAAZ;AAAEA,MAAAA;AAAF,KAAY;AAChB,UAAMC,KAAK,GAAGD,GAAG,CAACF,SAAD,CAAjB;AACA,UAAMD,QAAQ,GAAGG,GAAG,CAACP,aAAD,CAApB;AACA,WAAOQ,KAAK,CAACC,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACN,QAAL,KAAkBA,QAAzC,CAAP;AACD;AANkC,CAAD,CAA7B;AASP,OAAO,MAAMO,gBAAgB,GAAGlB,QAAQ,CAAC;AACvCQ,EAAAA,GAAG,EAAE,kBADkC;AAEvCM,EAAAA,GAAG,EAAE,SAAa;AAAA,QAAZ;AAAEA,MAAAA;AAAF,KAAY;AAChB,UAAMK,IAAI,GAAGL,GAAG,CAACP,aAAD,CAAhB;AACA,WAAO,EAAP;AACD;AALsC,CAAD,CAAjC","sourcesContent":["import { atom, selector } from \"recoil\";\n\nconst storedToDo = localStorage.getItem(\"storedToDo\");\nconst loadedToDo = JSON.parse(storedToDo as string);\n\ninterface ICustomCategory {\n  category: string;\n}\n\n// type categories = \"DONE\" | \"DOING\" | \"TODO\";\n// export enum Categories {\n//   \"TODO\" = \"TODO\",\n//   \"DOING\" = \"DOING\",\n//   \"DONE\" = \"DONE\",\n// }\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: string;\n}\n\nexport const categoryState = atom<string>({\n  key: \"category\",\n  default: \"TODO\",\n});\n\nexport const customCategoryState = atom<ICustomCategory[]>({\n  key: \"customCategory\",\n  default: [{ category: \"TODO\" }, { category: \"DOING\" }, { category: \"DONE\" }],\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: loadedToDo || [],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n\nexport const categorySelector = selector({\n  key: \"categorySelector\",\n  get: ({ get }) => {\n    const cate = get(categoryState);\n    return [];\n  },\n});\n"]},"metadata":{},"sourceType":"module"}