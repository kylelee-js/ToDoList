{"ast":null,"code":"var _jsxFileName = \"/Users/leegihun/Desktop/JS_Practice/ToDoList/src/ToDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoList() {\n  _s();\n\n  var _formState$errors;\n\n  // const [toDo, setToDo] = useState(\"\");\n  // const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n  //   const {\n  //     currentTarget: { value },\n  //   } = event;\n  //   setToDo(value);\n  // };\n  // const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n  //   event.preventDefault();\n  //   // validation is important....\n  //   // if (toDo.length > 140) => error\n  // };\n  const {\n    register,\n    watch,\n    handleSubmit,\n    formState\n  } = useForm(); // watch : onChange같은거\n\n  console.log(watch()); //formState를 통한 에러 핸들링\n\n  console.log(formState.errors); // handleSubmit이 먼저 모든 vaildation을 마친 다음 onVaild 함수를 실행한다.\n\n  const onVaild = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onVaild),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"What to do?\",\n        ...register(\"toDo\", {\n          required: true,\n          minLength: {\n            value: 5,\n            message: \"too short\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : _formState$errors.toDo.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"password\",\n        ...register(\"toDo\", {\n          required: \"password is required\",\n          minLength: 3\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoList, \"TyPyjpUwHqvGDPTVH3IQuf/qHrc=\", false, function () {\n  return [useForm];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/leegihun/Desktop/JS_Practice/ToDoList/src/ToDoList.tsx"],"names":["useForm","ToDoList","register","watch","handleSubmit","formState","console","log","errors","onVaild","data","required","minLength","value","message","toDo"],"mappings":";;;AACA,SAASA,OAAT,QAAwB,iBAAxB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,YAAnB;AAAiCC,IAAAA;AAAjC,MAA+CL,OAAO,EAA5D,CAbkB,CAclB;;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,EAAjB,EAfkB,CAiBlB;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,MAAtB,EAlBkB,CAoBlB;;AACA,QAAMC,OAAO,GAAIC,IAAD,IAAe;AAC7BJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEN,YAAY,CAACK,OAAD,CAA5B;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,aADd;AAAA,WAEMP,QAAQ,CAAC,MAAD,EAAS;AACnBS,UAAAA,QAAQ,EAAE,IADS;AAEnBC,UAAAA,SAAS,EAAE;AAAEC,YAAAA,KAAK,EAAE,CAAT;AAAYC,YAAAA,OAAO,EAAE;AAArB;AAFQ,SAAT;AAFd;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,uCAAOT,SAAS,CAACG,MAAjB,sDAAO,kBAAkBO,IAAlB,CAAuBD;AAA9B;AAAA;AAAA;AAAA;AAAA,cARF,eAUE;AACE,QAAA,WAAW,EAAC,UADd;AAAA,WAEMZ,QAAQ,CAAC,MAAD,EAAS;AACnBS,UAAAA,QAAQ,EAAE,sBADS;AAEnBC,UAAAA,SAAS,EAAE;AAFQ,SAAT;AAFd;AAAA;AAAA;AAAA;AAAA,cAVF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAhDQX,Q;UAa8CD,O;;;KAb9CC,Q;AAkDT,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nfunction ToDoList() {\n  // const [toDo, setToDo] = useState(\"\");\n  // const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n  //   const {\n  //     currentTarget: { value },\n  //   } = event;\n  //   setToDo(value);\n  // };\n  // const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n  //   event.preventDefault();\n  //   // validation is important....\n  //   // if (toDo.length > 140) => error\n  // };\n  const { register, watch, handleSubmit, formState } = useForm();\n  // watch : onChange같은거\n  console.log(watch());\n\n  //formState를 통한 에러 핸들링\n  console.log(formState.errors);\n\n  // handleSubmit이 먼저 모든 vaildation을 마친 다음 onVaild 함수를 실행한다.\n  const onVaild = (data: any) => {\n    console.log(data);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onVaild)}>\n        <input\n          placeholder=\"What to do?\"\n          {...register(\"toDo\", {\n            required: true,\n            minLength: { value: 5, message: \"too short\" },\n          })}\n        />\n        <span>{formState.errors?.toDo.message}</span>\n\n        <input\n          placeholder=\"password\"\n          {...register(\"toDo\", {\n            required: \"password is required\",\n            minLength: 3,\n          })}\n        />\n        <button>Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}