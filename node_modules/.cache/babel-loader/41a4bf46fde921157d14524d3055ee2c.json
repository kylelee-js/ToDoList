{"ast":null,"code":"var _jsxFileName = \"/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Categories, toDoState } from \"../atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ToDo(_ref) {\n  _s();\n\n  let {\n    text,\n    category,\n    id,\n    customCategory\n  } = _ref;\n  const setToDos = useSetRecoilState(toDoState); // const customCategory = useRecoilValue(customCategoryState);\n\n  const onClick = name => {\n    setToDos(prev => {\n      const index = prev.findIndex(toDo => toDo.id === id);\n      const front = prev.slice(0, index);\n      const back = prev.slice(index + 1);\n      const newToDo = {\n        text,\n        id,\n        category: name\n      };\n      const newArr = [...front, newToDo, ...back];\n      return newArr;\n    });\n  };\n\n  const onDelete = () => {\n    setToDos(prev => {\n      const targetIndex = prev.findIndex(toDo => toDo.id === id);\n      const copyToDos = [...prev];\n      copyToDos.splice(targetIndex, 1);\n      return copyToDos;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"* \", text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), category !== Categories.DOING && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: Categories.DOING,\n        onClick: () => onClick(category),\n        children: \"Doing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), category !== Categories.TODO && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: Categories.TODO,\n        onClick: () => onClick(category),\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), category !== Categories.DONE && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: Categories.DONE,\n        onClick: () => onClick(category),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), customCategory && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: customCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onDelete,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ToDo, \"BR93yBPF8CYIHT/jsK8zidf9OVI=\", false, function () {\n  return [useSetRecoilState];\n});\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDo.tsx"],"names":["React","useSetRecoilState","Categories","toDoState","ToDo","text","category","id","customCategory","setToDos","onClick","name","prev","index","findIndex","toDo","front","slice","back","newToDo","newArr","onDelete","targetIndex","copyToDos","splice","DOING","TODO","DONE"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAyBC,iBAAzB,QAAkD,QAAlD;AACA,SAASC,UAAT,EAAiDC,SAAjD,QAAkE,UAAlE;;;;AAEA,SAASC,IAAT,OAA6D;AAAA;;AAAA,MAA/C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,EAAlB;AAAsBC,IAAAA;AAAtB,GAA+C;AAC3D,QAAMC,QAAQ,GAAGR,iBAAiB,CAACE,SAAD,CAAlC,CAD2D,CAE3D;;AACA,QAAMO,OAAO,GAAIC,IAAD,IAA6B;AAC3CF,IAAAA,QAAQ,CAAEG,IAAD,IAAU;AACjB,YAAMC,KAAK,GAAGD,IAAI,CAACE,SAAL,CAAgBC,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAYA,EAArC,CAAd;AAEA,YAAMS,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcJ,KAAd,CAAd;AACA,YAAMK,IAAI,GAAGN,IAAI,CAACK,KAAL,CAAWJ,KAAK,GAAG,CAAnB,CAAb;AACA,YAAMM,OAAO,GAAG;AAAEd,QAAAA,IAAF;AAAQE,QAAAA,EAAR;AAAYD,QAAAA,QAAQ,EAAEK;AAAtB,OAAhB;AACA,YAAMS,MAAM,GAAG,CAAC,GAAGJ,KAAJ,EAAWG,OAAX,EAAoB,GAAGD,IAAvB,CAAf;AACA,aAAOE,MAAP;AACD,KARO,CAAR;AASD,GAVD;;AAYA,QAAMC,QAAQ,GAAG,MAAM;AACrBZ,IAAAA,QAAQ,CAAEG,IAAD,IAAU;AACjB,YAAMU,WAAW,GAAGV,IAAI,CAACE,SAAL,CAAgBC,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAYA,EAArC,CAApB;AACA,YAAMgB,SAAS,GAAG,CAAC,GAAGX,IAAJ,CAAlB;AACAW,MAAAA,SAAS,CAACC,MAAV,CAAiBF,WAAjB,EAA8B,CAA9B;AACA,aAAOC,SAAP;AACD,KALO,CAAR;AAMD,GAPD;;AAQA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,yBAASlB,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,QAAQ,KAAKJ,UAAU,CAACuB,KAAxB,iBACC;AAAQ,QAAA,IAAI,EAAEvB,UAAU,CAACuB,KAAzB;AAAgC,QAAA,OAAO,EAAE,MAAMf,OAAO,CAACJ,QAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAOGA,QAAQ,KAAKJ,UAAU,CAACwB,IAAxB,iBACC;AAAQ,QAAA,IAAI,EAAExB,UAAU,CAACwB,IAAzB;AAA+B,QAAA,OAAO,EAAE,MAAMhB,OAAO,CAACJ,QAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,EAYGA,QAAQ,KAAKJ,UAAU,CAACyB,IAAxB,iBACC;AAAQ,QAAA,IAAI,EAAEzB,UAAU,CAACyB,IAAzB;AAA+B,QAAA,OAAO,EAAE,MAAMjB,OAAO,CAACJ,QAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,EAiBGE,cAAc,iBAAI;AAAA,kBAASA;AAAT;AAAA;AAAA;AAAA;AAAA,cAjBrB,eAkBE;AAAQ,QAAA,OAAO,EAAEa,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAwBD;;GA/CQjB,I;UACUH,iB;;;KADVG,I;AAiDT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { Categories, customCategoryState, IToDo, toDoState } from \"../atoms\";\n\nfunction ToDo({ text, category, id, customCategory }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  // const customCategory = useRecoilValue(customCategoryState);\n  const onClick = (name: IToDo[\"category\"]) => {\n    setToDos((prev) => {\n      const index = prev.findIndex((toDo) => toDo.id === id);\n\n      const front = prev.slice(0, index);\n      const back = prev.slice(index + 1);\n      const newToDo = { text, id, category: name };\n      const newArr = [...front, newToDo, ...back];\n      return newArr;\n    });\n  };\n\n  const onDelete = () => {\n    setToDos((prev) => {\n      const targetIndex = prev.findIndex((toDo) => toDo.id === id);\n      const copyToDos = [...prev];\n      copyToDos.splice(targetIndex, 1);\n      return copyToDos;\n    });\n  };\n  return (\n    <>\n      <li>\n        <span>* {text}</span>\n        {category !== Categories.DOING && (\n          <button name={Categories.DOING} onClick={() => onClick(category)}>\n            Doing\n          </button>\n        )}\n        {category !== Categories.TODO && (\n          <button name={Categories.TODO} onClick={() => onClick(category)}>\n            To Do\n          </button>\n        )}\n        {category !== Categories.DONE && (\n          <button name={Categories.DONE} onClick={() => onClick(category)}>\n            Done\n          </button>\n        )}\n        {customCategory && <button>{customCategory}</button>}\n        <button onClick={onDelete}>X</button>\n      </li>\n    </>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}