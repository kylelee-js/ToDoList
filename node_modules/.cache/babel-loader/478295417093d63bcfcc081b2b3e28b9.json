{"ast":null,"code":"var _jsxFileName = \"/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Categories, toDoState } from \"../atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ToDo(_ref) {\n  _s();\n\n  let {\n    text,\n    category,\n    id\n  } = _ref;\n  const setToDos = useSetRecoilState(toDoState);\n\n  const onClick = name => {\n    setToDos(prev => {\n      const index = prev.findIndex(toDo => toDo.id === id);\n      const front = prev.slice(0, index);\n      const back = prev.slice(index + 1);\n      const newToDo = {\n        text,\n        id,\n        category: name\n      };\n      const newArr = [...front, newToDo, ...back];\n      return newArr;\n    });\n  };\n\n  console.log(category);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"* \", text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"* \", category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), category !== Categories.DOING && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: Categories.DOING,\n        onClick: () => onClick(category),\n        children: \"Doing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), category !== Categories.TODO && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: Categories.TODO,\n        onClick: () => onClick(category),\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), category !== Categories.DONE && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: Categories.DONE,\n        onClick: () => onClick(category),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ToDo, \"BR93yBPF8CYIHT/jsK8zidf9OVI=\", false, function () {\n  return [useSetRecoilState];\n});\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDo.tsx"],"names":["React","useSetRecoilState","Categories","toDoState","ToDo","text","category","id","setToDos","onClick","name","prev","index","findIndex","toDo","front","slice","back","newToDo","newArr","console","log","DOING","TODO","DONE"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,SAASC,UAAT,EAA4BC,SAA5B,QAA6C,UAA7C;;;;AAEA,SAASC,IAAT,OAA6C;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAA+B;AAC3C,QAAMC,QAAQ,GAAGP,iBAAiB,CAACE,SAAD,CAAlC;;AACA,QAAMM,OAAO,GAAIC,IAAD,IAA6B;AAC3CF,IAAAA,QAAQ,CAAEG,IAAD,IAAU;AACjB,YAAMC,KAAK,GAAGD,IAAI,CAACE,SAAL,CAAgBC,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYA,EAArC,CAAd;AAEA,YAAMQ,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcJ,KAAd,CAAd;AACA,YAAMK,IAAI,GAAGN,IAAI,CAACK,KAAL,CAAWJ,KAAK,GAAG,CAAnB,CAAb;AACA,YAAMM,OAAO,GAAG;AAAEb,QAAAA,IAAF;AAAQE,QAAAA,EAAR;AAAYD,QAAAA,QAAQ,EAAEI;AAAtB,OAAhB;AACA,YAAMS,MAAM,GAAG,CAAC,GAAGJ,KAAJ,EAAWG,OAAX,EAAoB,GAAGD,IAAvB,CAAf;AACA,aAAOE,MAAP;AACD,KARO,CAAR;AASD,GAVD;;AAYAC,EAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,yBAASD,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yBAASC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGA,QAAQ,KAAKJ,UAAU,CAACoB,KAAxB,iBACC;AAAQ,QAAA,IAAI,EAAEpB,UAAU,CAACoB,KAAzB;AAAgC,QAAA,OAAO,EAAE,MAAMb,OAAO,CAACH,QAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAQGA,QAAQ,KAAKJ,UAAU,CAACqB,IAAxB,iBACC;AAAQ,QAAA,IAAI,EAAErB,UAAU,CAACqB,IAAzB;AAA+B,QAAA,OAAO,EAAE,MAAMd,OAAO,CAACH,QAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,EAaGA,QAAQ,KAAKJ,UAAU,CAACsB,IAAxB,iBACC;AAAQ,QAAA,IAAI,EAAEtB,UAAU,CAACsB,IAAzB;AAA+B,QAAA,OAAO,EAAE,MAAMf,OAAO,CAACH,QAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBD;;GAtCQF,I;UACUH,iB;;;KADVG,I;AAwCT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Categories, IToDo, toDoState } from \"../atoms\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const onClick = (name: IToDo[\"category\"]) => {\n    setToDos((prev) => {\n      const index = prev.findIndex((toDo) => toDo.id === id);\n\n      const front = prev.slice(0, index);\n      const back = prev.slice(index + 1);\n      const newToDo = { text, id, category: name };\n      const newArr = [...front, newToDo, ...back];\n      return newArr;\n    });\n  };\n\n  console.log(category);\n  return (\n    <>\n      <li>\n        <span>* {text}</span>\n        <span>* {category}</span>\n        {category !== Categories.DOING && (\n          <button name={Categories.DOING} onClick={() => onClick(category)}>\n            Doing\n          </button>\n        )}\n        {category !== Categories.TODO && (\n          <button name={Categories.TODO} onClick={() => onClick(category)}>\n            To Do\n          </button>\n        )}\n        {category !== Categories.DONE && (\n          <button name={Categories.DONE} onClick={() => onClick(category)}>\n            Done\n          </button>\n        )}\n      </li>\n    </>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}