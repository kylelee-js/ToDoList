{"ast":null,"code":"var _jsxFileName = \"/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { toDoState, toDoSelector, categoryState, Categories } from \"../atoms\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoList() {\n  _s();\n\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const TODOS = useRecoilValue(toDoSelector);\n  const [category, setCategory] = useRecoilState(categoryState);\n  useEffect(() => {\n    if (toDos.length === 0) {\n      const storedToDo = localStorage.getItem(\"storedToDo\");\n      const loadedToDo = JSON.parse(storedToDo);\n      setToDos(loadedToDo);\n    }\n  }, []);\n\n  const onInput = event => {\n    setCategory(event.currentTarget.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Dos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onInput: onInput,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: Categories.TODO,\n        children: Categories.TODO\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: Categories.DOING,\n        children: Categories.DOING\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: Categories.DONE,\n        children: Categories.DONE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateToDo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: TODOS && TODOS.map(toDo => /*#__PURE__*/_jsxDEV(ToDo, { ...toDo\n      }, toDo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 41\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoList, \"Xil/DEcUy1wYsqaMxMwhAC7/Dpk=\", false, function () {\n  return [useRecoilState, useRecoilValue, useRecoilState];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDoList.tsx"],"names":["React","useEffect","useRecoilState","useRecoilValue","toDoState","toDoSelector","categoryState","Categories","CreateToDo","ToDo","ToDoList","toDos","setToDos","TODOS","category","setCategory","length","storedToDo","localStorage","getItem","loadedToDo","JSON","parse","onInput","event","currentTarget","value","TODO","DOING","DONE","map","toDo","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA2C,OAA3C;AAEA,SAEEC,cAFF,EAGEC,cAHF,QAKO,QALP;AAMA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,aAAlC,EAAiDC,UAAjD,QAAmE,UAAnE;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,cAAc,CAACE,SAAD,CAAxC;AACA,QAAMS,KAAK,GAAGV,cAAc,CAACE,YAAD,CAA5B;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0Bb,cAAc,CAACI,aAAD,CAA9C;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,KAAK,CAACK,MAAN,KAAiB,CAArB,EAAwB;AACtB,YAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;AACA,YAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,UAAX,CAAnB;AACAL,MAAAA,QAAQ,CAACQ,UAAD,CAAR;AACD;AACF,GANQ,EAMN,EANM,CAAT;;AAOA,QAAMG,OAAO,GAAIC,KAAD,IAA+C;AAC7DT,IAAAA,WAAW,CAACS,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAX;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,KAAK,EAAEZ,QAAf;AAAyB,MAAA,OAAO,EAAES,OAAlC;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAEhB,UAAU,CAACoB,IAA1B;AAAA,kBAAiCpB,UAAU,CAACoB;AAA5C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAEpB,UAAU,CAACqB,KAA1B;AAAA,kBAAkCrB,UAAU,CAACqB;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,KAAK,EAAErB,UAAU,CAACsB,IAA1B;AAAA,kBAAiCtB,UAAU,CAACsB;AAA5C;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,gBAAKhB,KAAK,IAAIA,KAAK,CAACiB,GAAN,CAAWC,IAAD,iBAAU,QAAC,IAAD,OAAwBA;AAAxB,SAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,cAApB;AAAd;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA1BQtB,Q;UACmBR,c,EACZC,c,EACkBD,c;;;KAHzBQ,Q;AA4BT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  atom,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\nimport { toDoState, toDoSelector, categoryState, Categories } from \"../atoms\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nfunction ToDoList() {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const TODOS = useRecoilValue(toDoSelector);\n  const [category, setCategory] = useRecoilState(categoryState);\n  useEffect(() => {\n    if (toDos.length === 0) {\n      const storedToDo = localStorage.getItem(\"storedToDo\");\n      const loadedToDo = JSON.parse(storedToDo as string);\n      setToDos(loadedToDo);\n    }\n  }, []);\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(event.currentTarget.value as any);\n  };\n  return (\n    <div>\n      <h1>To Dos</h1>\n      <select value={category} onInput={onInput}>\n        <option value={Categories.TODO}>{Categories.TODO}</option>\n        <option value={Categories.DOING}>{Categories.DOING}</option>\n        <option value={Categories.DONE}>{Categories.DONE}</option>\n      </select>\n      <CreateToDo />\n      <ul>{TODOS && TODOS.map((toDo) => <ToDo key={toDo.id} {...toDo} />)}</ul>\n    </div>\n  );\n}\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}