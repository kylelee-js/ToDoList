{"ast":null,"code":"var _jsxFileName = \"/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/CreateToDo.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { categoryState, customCategoryState, toDoState } from \"../atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreateToDo() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm();\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const [customCategoryArr, setCustomCategory] = useRecoilState(customCategoryState);\n  useEffect(() => {\n    localStorage.setItem(\"storedToDo\", JSON.stringify(toDos));\n  }, [toDos]);\n\n  const onValid = TODOS => {\n    setToDos(prev => [{\n      text: TODOS.toDo,\n      id: Date.now(),\n      category,\n      customCategory: TODOS.customCategory\n    }, ...prev]);\n    console.log(TODOS.toDo); // setCategory를 통해 커스텀 카테고리 입력\n\n    if (TODOS.customCategory !== \"\") {\n      setCustomCategory(prev => [TODOS.customCategory + \"\", ...prev]);\n    } // hook-form의 객체 중  \"toDo\" 프로퍼티의 값을 변경\n\n\n    setValue(\"toDo\", \"\");\n    setValue(\"category\", \"\");\n    console.log(localStorage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onValid),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"What to do?\",\n        ...register(\"toDo\", {\n          required: true,\n          minLength: {\n            value: 5,\n            message: \"too short\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Custom Category\",\n        ...register(\"customCategory\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CreateToDo, \"Auv5tNaV88V8WKv36X9ckj8qG/E=\", false, function () {\n  return [useForm, useRecoilState, useRecoilValue, useRecoilState];\n});\n\n_c = CreateToDo;\nexport default CreateToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateToDo\");","map":{"version":3,"sources":["/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/CreateToDo.tsx"],"names":["useEffect","useForm","useRecoilState","useRecoilValue","categoryState","customCategoryState","toDoState","CreateToDo","register","handleSubmit","setValue","toDos","setToDos","category","customCategoryArr","setCustomCategory","localStorage","setItem","JSON","stringify","onValid","TODOS","prev","text","toDo","id","Date","now","customCategory","console","log","required","minLength","value","message"],"mappings":";;;AAAA,SAASA,SAAT,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAAkE,QAAlE;AACA,SAASC,aAAT,EAAwBC,mBAAxB,EAA6CC,SAA7C,QAA8D,UAA9D;;;;AAOA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAuCT,OAAO,EAApD;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBV,cAAc,CAACI,SAAD,CAAxC;AACA,QAAMO,QAAQ,GAAGV,cAAc,CAACC,aAAD,CAA/B;AACA,QAAM,CAACU,iBAAD,EAAoBC,iBAApB,IACJb,cAAc,CAACG,mBAAD,CADhB;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeR,KAAf,CAAnC;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,QAAMS,OAAO,GAAIC,KAAD,IAAkB;AAChCT,IAAAA,QAAQ,CAAEU,IAAD,IAAU,CACjB;AACEC,MAAAA,IAAI,EAAEF,KAAK,CAACG,IADd;AAEEC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFN;AAGEd,MAAAA,QAHF;AAIEe,MAAAA,cAAc,EAAEP,KAAK,CAACO;AAJxB,KADiB,EAOjB,GAAGN,IAPc,CAAX,CAAR;AAUAO,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACG,IAAlB,EAXgC,CAYhC;;AACA,QAAIH,KAAK,CAACO,cAAN,KAAyB,EAA7B,EAAiC;AAC/Bb,MAAAA,iBAAiB,CAAEO,IAAD,IAAU,CAACD,KAAK,CAACO,cAAN,GAAuB,EAAxB,EAA4B,GAAGN,IAA/B,CAAX,CAAjB;AACD,KAf+B,CAiBhC;;;AACAZ,IAAAA,QAAQ,CAAC,MAAD,EAAS,EAAT,CAAR;AACAA,IAAAA,QAAQ,CAAC,UAAD,EAAa,EAAb,CAAR;AAEAmB,IAAAA,OAAO,CAACC,GAAR,CAAYd,YAAZ;AACD,GAtBD;;AAwBA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEP,YAAY,CAACW,OAAD,CAA5B;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,aADd;AAAA,WAEMZ,QAAQ,CAAC,MAAD,EAAS;AACnBuB,UAAAA,QAAQ,EAAE,IADS;AAEnBC,UAAAA,SAAS,EAAE;AAAEC,YAAAA,KAAK,EAAE,CAAT;AAAYC,YAAAA,OAAO,EAAE;AAArB;AAFQ,SAAT;AAFd;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAO,QAAA,WAAW,EAAC,iBAAnB;AAAA,WAAyC1B,QAAQ,CAAC,gBAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD;;GAlDQD,U;UACsCN,O,EACnBC,c,EACTC,c,EAEfD,c;;;KALKK,U;AAoDT,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { categoryState, customCategoryState, toDoState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n  category: string;\n  customCategory?: string;\n}\nfunction CreateToDo() {\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const [customCategoryArr, setCustomCategory] =\n    useRecoilState(customCategoryState);\n\n  useEffect(() => {\n    localStorage.setItem(\"storedToDo\", JSON.stringify(toDos));\n  }, [toDos]);\n\n  const onValid = (TODOS: IForm) => {\n    setToDos((prev) => [\n      {\n        text: TODOS.toDo,\n        id: Date.now(),\n        category,\n        customCategory: TODOS.customCategory,\n      },\n      ...prev,\n    ]);\n\n    console.log(TODOS.toDo);\n    // setCategory를 통해 커스텀 카테고리 입력\n    if (TODOS.customCategory !== \"\") {\n      setCustomCategory((prev) => [TODOS.customCategory + \"\", ...prev]);\n    }\n\n    // hook-form의 객체 중  \"toDo\" 프로퍼티의 값을 변경\n    setValue(\"toDo\", \"\");\n    setValue(\"category\", \"\");\n\n    console.log(localStorage);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onValid)}>\n        <input\n          placeholder=\"What to do?\"\n          {...register(\"toDo\", {\n            required: true,\n            minLength: { value: 5, message: \"too short\" },\n          })}\n        />\n        <input placeholder=\"Custom Category\" {...register(\"customCategory\")} />\n        <button>Add</button>\n      </form>\n    </>\n  );\n}\n\nexport default CreateToDo;\n"]},"metadata":{},"sourceType":"module"}