{"ast":null,"code":"var _jsxFileName = \"/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { toDoState } from \"../atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ToDo(_ref) {\n  _s();\n\n  let {\n    text,\n    category,\n    id\n  } = _ref;\n  const setToDos = useSetRecoilState(toDoState);\n\n  const onClick = name => {\n    setToDos(prev => {\n      const index = prev.findIndex(toDo => toDo.id === id);\n      const front = prev.slice(0, index);\n      const back = prev.slice(index + 1);\n      const newToDo = {\n        text,\n        id,\n        category: name\n      };\n      const newArr = [...front, newToDo, ...back];\n      return newArr;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), category !== \"DOING\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: category,\n        onClick: () => onClick(category),\n        children: \"Doing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), category !== \"TODO\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: category,\n        onClick: () => onClick(category),\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), category !== \"DONE\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        name: category,\n        onClick: () => onClick(category),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ToDo, \"BR93yBPF8CYIHT/jsK8zidf9OVI=\", false, function () {\n  return [useSetRecoilState];\n});\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDo.tsx"],"names":["React","useSetRecoilState","toDoState","ToDo","text","category","id","setToDos","onClick","name","prev","index","findIndex","toDo","front","slice","back","newToDo","newArr"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,SAAgBC,SAAhB,QAAiC,UAAjC;;;;AAEA,SAASC,IAAT,OAA6C;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAA+B;AAC3C,QAAMC,QAAQ,GAAGN,iBAAiB,CAACC,SAAD,CAAlC;;AACA,QAAMM,OAAO,GAAIC,IAAD,IAA6B;AAC3CF,IAAAA,QAAQ,CAAEG,IAAD,IAAU;AACjB,YAAMC,KAAK,GAAGD,IAAI,CAACE,SAAL,CAAgBC,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYA,EAArC,CAAd;AAEA,YAAMQ,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcJ,KAAd,CAAd;AACA,YAAMK,IAAI,GAAGN,IAAI,CAACK,KAAL,CAAWJ,KAAK,GAAG,CAAnB,CAAb;AACA,YAAMM,OAAO,GAAG;AAAEb,QAAAA,IAAF;AAAQE,QAAAA,EAAR;AAAYD,QAAAA,QAAQ,EAAEI;AAAtB,OAAhB;AACA,YAAMS,MAAM,GAAG,CAAC,GAAGJ,KAAJ,EAAWG,OAAX,EAAoB,GAAGD,IAAvB,CAAf;AACA,aAAOE,MAAP;AACD,KARO,CAAR;AASD,GAVD;;AAWA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,kBAAOd;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,QAAQ,KAAK,OAAb,iBACC;AAAQ,QAAA,IAAI,EAAEA,QAAd;AAAwB,QAAA,OAAO,EAAE,MAAMG,OAAO,CAACH,QAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAOGA,QAAQ,KAAK,MAAb,iBACC;AAAQ,QAAA,IAAI,EAAEA,QAAd;AAAwB,QAAA,OAAO,EAAE,MAAMG,OAAO,CAACH,QAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,EAYGA,QAAQ,KAAK,MAAb,iBACC;AAAQ,QAAA,IAAI,EAAEA,QAAd;AAAwB,QAAA,OAAO,EAAE,MAAMG,OAAO,CAACH,QAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyBD;;GAtCQF,I;UACUF,iB;;;KADVE,I;AAwCT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { IToDo, toDoState } from \"../atoms\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const onClick = (name: IToDo[\"category\"]) => {\n    setToDos((prev) => {\n      const index = prev.findIndex((toDo) => toDo.id === id);\n\n      const front = prev.slice(0, index);\n      const back = prev.slice(index + 1);\n      const newToDo = { text, id, category: name };\n      const newArr = [...front, newToDo, ...back];\n      return newArr;\n    });\n  };\n  return (\n    <>\n      <li>\n        <span>{text}</span>\n        {category !== \"DOING\" && (\n          <button name={category} onClick={() => onClick(category)}>\n            Doing\n          </button>\n        )}\n        {category !== \"TODO\" && (\n          <button name={category} onClick={() => onClick(category)}>\n            To Do\n          </button>\n        )}\n        {category !== \"DONE\" && (\n          <button name={category} onClick={() => onClick(category)}>\n            Done\n          </button>\n        )}\n\n        <button>To Do</button>\n        <button>Done</button>\n      </li>\n    </>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}