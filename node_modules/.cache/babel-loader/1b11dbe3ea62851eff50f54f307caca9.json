{"ast":null,"code":"import { atom, selector } from \"recoil\"; // const storedToDo = localStorage.getItem(\"storedToDo\");\n// const loadedToDo = JSON.parse(storedToDo as string);\n// console.log(\"load\", loadedToDo);\n\nexport let Categories;\n\n(function (Categories) {\n  Categories[\"TODO\"] = \"TODO\";\n  Categories[\"DOING\"] = \"DOING\";\n  Categories[\"DONE\"] = \"DONE\";\n})(Categories || (Categories = {}));\n\nexport const categoryState = atom({\n  key: \"category\",\n  default: Categories.TODO\n});\nexport const customCategoryState = atom({\n  key: \"customCategory\",\n  default: []\n});\nexport const toDoState = atom({\n  key: \"toDo\",\n  default: []\n});\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: _ref => {\n    let {\n      get\n    } = _ref;\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter(toDo => toDo.category === category);\n  }\n});\nexport const categorySelector = selector({\n  key: \"categorySelector\",\n  get: _ref2 => {\n    let {\n      get\n    } = _ref2;\n    const cate = get(categoryState);\n    return [];\n  }\n});","map":{"version":3,"sources":["/Users/leegihun/Documents/JS_Practice/ToDoList/src/atoms.ts"],"names":["atom","selector","Categories","categoryState","key","default","TODO","customCategoryState","toDoState","toDoSelector","get","toDos","category","filter","toDo","categorySelector","cate"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,QAA/B,C,CAEA;AACA;AACA;;AAGA,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAaZ,OAAO,MAAMC,aAAa,GAAGH,IAAI,CAAa;AAC5CI,EAAAA,GAAG,EAAE,UADuC;AAE5CC,EAAAA,OAAO,EAAEH,UAAU,CAACI;AAFwB,CAAb,CAA1B;AAKP,OAAO,MAAMC,mBAAmB,GAAGP,IAAI,CAAW;AAChDI,EAAAA,GAAG,EAAE,gBAD2C;AAEhDC,EAAAA,OAAO,EAAE;AAFuC,CAAX,CAAhC;AAKP,OAAO,MAAMG,SAAS,GAAGR,IAAI,CAAU;AACrCI,EAAAA,GAAG,EAAE,MADgC;AAErCC,EAAAA,OAAO,EAAE;AAF4B,CAAV,CAAtB;AAKP,OAAO,MAAMI,YAAY,GAAGR,QAAQ,CAAC;AACnCG,EAAAA,GAAG,EAAE,cAD8B;AAEnCM,EAAAA,GAAG,EAAE,QAAa;AAAA,QAAZ;AAAEA,MAAAA;AAAF,KAAY;AAChB,UAAMC,KAAK,GAAGD,GAAG,CAACF,SAAD,CAAjB;AACA,UAAMI,QAAQ,GAAGF,GAAG,CAACP,aAAD,CAApB;AACA,WAAOQ,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACF,QAAL,KAAkBA,QAAzC,CAAP;AACD;AANkC,CAAD,CAA7B;AASP,OAAO,MAAMG,gBAAgB,GAAGd,QAAQ,CAAC;AACvCG,EAAAA,GAAG,EAAE,kBADkC;AAEvCM,EAAAA,GAAG,EAAE,SAAa;AAAA,QAAZ;AAAEA,MAAAA;AAAF,KAAY;AAChB,UAAMM,IAAI,GAAGN,GAAG,CAACP,aAAD,CAAhB;AACA,WAAO,EAAP;AACD;AALsC,CAAD,CAAjC","sourcesContent":["import { atom, selector } from \"recoil\";\n\n// const storedToDo = localStorage.getItem(\"storedToDo\");\n// const loadedToDo = JSON.parse(storedToDo as string);\n// console.log(\"load\", loadedToDo);\n\ntype categories = \"DONE\" | \"DOING\" | \"TODO\";\nexport enum Categories {\n  \"TODO\" = \"TODO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\",\n}\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: Categories;\n  customCategory?: string;\n}\n\nexport const categoryState = atom<Categories>({\n  key: \"category\",\n  default: Categories.TODO,\n});\n\nexport const customCategoryState = atom<string[]>({\n  key: \"customCategory\",\n  default: [],\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n\nexport const categorySelector = selector({\n  key: \"categorySelector\",\n  get: ({ get }) => {\n    const cate = get(categoryState);\n    return [];\n  },\n});\n"]},"metadata":{},"sourceType":"module"}