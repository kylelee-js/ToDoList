[{"/Users/leegihun/Documents/문서 - MacBook Pro/JS_Practice/ToDoList/src/index.tsx":"1","/Users/leegihun/Documents/문서 - MacBook Pro/JS_Practice/ToDoList/src/theme.ts":"2","/Users/leegihun/Documents/문서 - MacBook Pro/JS_Practice/ToDoList/src/App.tsx":"3","/Users/leegihun/Documents/문서 - MacBook Pro/JS_Practice/ToDoList/src/GlobalStyle.ts":"4","/Users/leegihun/Documents/문서 - MacBook Pro/JS_Practice/ToDoList/src/atoms.ts":"5","/Users/leegihun/Documents/문서 - MacBook Pro/JS_Practice/ToDoList/src/components/DraggableCard.tsx":"6","/Users/leegihun/Documents/문서 - MacBook Pro/JS_Practice/ToDoList/src/components/Board.tsx":"7"},{"size":424,"mtime":1646608447000,"results":"8","hashOfConfig":"9"},{"size":164,"mtime":1647579327286,"results":"10","hashOfConfig":"9"},{"size":2100,"mtime":1647920099177,"results":"11","hashOfConfig":"9"},{"size":420,"mtime":1647867720762,"results":"12","hashOfConfig":"9"},{"size":484,"mtime":1647920135259,"results":"13","hashOfConfig":"9"},{"size":1260,"mtime":1647919505775,"results":"14","hashOfConfig":"9"},{"size":2156,"mtime":1647919330114,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jhuzpa",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/leegihun/Documents/문서 - MacBook Pro/JS_Practice/ToDoList/src/index.tsx",[],[],"/Users/leegihun/Documents/문서 - MacBook Pro/JS_Practice/ToDoList/src/theme.ts",[],[],["41","42"],"/Users/leegihun/Documents/문서 - MacBook Pro/JS_Practice/ToDoList/src/App.tsx",["43"],[],"import GlobalStyle from \"./GlobalStyle\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { toDoState } from \"./atoms\";\nimport Board from \"./components/Board\";\nimport { useEffect } from \"react\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\nconst Boards = styled.div`\n  display: grid;\n  gap: 10px;\n  grid-template-columns: repeat(3, 1fr);\n  width: 100%;\n`;\nfunction App() {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n\n  const onDragEnd = ({ destination, source }: DropResult) => {\n    if (!destination) return;\n\n    if (destination?.droppableId == source.droppableId) {\n      //same board\n      setToDos((prev) => {\n        const copiedToDos = [...prev[source.droppableId]];\n        const targetToDo = copiedToDos[source.index];\n        copiedToDos.splice(source.index, 1);\n        copiedToDos.splice(destination.index, 0, targetToDo);\n        return { ...prev, [source.droppableId]: copiedToDos };\n      });\n    } else {\n      //cross board\n      setToDos((prev) => {\n        const destinationToDos = [...prev[destination.droppableId]];\n        const sourceToDos = [...prev[source.droppableId]];\n        const targetToDo = sourceToDos[source.index];\n        sourceToDos.splice(source.index, 1);\n        destinationToDos.splice(destination.index, 0, targetToDo);\n        return {\n          ...prev,\n          [destination.droppableId]: destinationToDos,\n          [source.droppableId]: sourceToDos,\n        };\n      });\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"ToDos\", JSON.stringify(toDos));\n  }, [toDos]);\n  return (\n    <>\n      <GlobalStyle />\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Wrapper>\n          <Boards>\n            {Object.keys(toDos).map((Id) => (\n              <Board key={Id} droppableId={Id} toDos={toDos[Id]} />\n            ))}\n          </Boards>\n        </Wrapper>\n      </DragDropContext>\n    </>\n  );\n}\n\nexport default App;\n",["44","45"],"/Users/leegihun/Documents/문서 - MacBook Pro/JS_Practice/ToDoList/src/GlobalStyle.ts",[],[],"/Users/leegihun/Documents/문서 - MacBook Pro/JS_Practice/ToDoList/src/atoms.ts",["46"],[],"import { atom, selector } from \"recoil\";\n\nconst storedToDos = localStorage.getItem(\"ToDos\");\nconst parsedTodos = JSON.parse(storedToDos as string);\n\nexport interface IToDo {\n  id: number;\n  text: string;\n}\n\ninterface IToDoState {\n  // 추후 다양한 키를 가진 커스텀 보드를 생성할 수 있도록\n  [key: string]: IToDo[];\n}\n\nexport const toDoState = atom<IToDoState>({\n  key: \"toDoState\",\n  default: parsedTodos || {\n    to_do: [],\n    doing: [],\n    done: [],\n  },\n});\n","/Users/leegihun/Documents/문서 - MacBook Pro/JS_Practice/ToDoList/src/components/DraggableCard.tsx",[],[],"/Users/leegihun/Documents/문서 - MacBook Pro/JS_Practice/ToDoList/src/components/Board.tsx",[],[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":29,"column":34,"nodeType":"53","messageId":"54","endLine":29,"endColumn":36},{"ruleId":"47","replacedBy":"55"},{"ruleId":"49","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":24},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["61"],["62"],"@typescript-eslint/no-unused-vars","'selector' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]