[{"/Users/leegihun/Documents/JS_Practice/ToDoList/src/index.tsx":"1","/Users/leegihun/Documents/JS_Practice/ToDoList/src/theme.ts":"2","/Users/leegihun/Documents/JS_Practice/ToDoList/src/App.tsx":"3","/Users/leegihun/Documents/JS_Practice/ToDoList/src/GlobalStyle.ts":"4","/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDoList.tsx":"5","/Users/leegihun/Documents/JS_Practice/ToDoList/src/atoms.ts":"6","/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/CreateToDo.tsx":"7","/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDo.tsx":"8","/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/CreateNewCategory.tsx":"9"},{"size":424,"mtime":1646608447000,"results":"10","hashOfConfig":"11"},{"size":185,"mtime":1646608540000,"results":"12","hashOfConfig":"11"},{"size":200,"mtime":1646634880000,"results":"13","hashOfConfig":"11"},{"size":427,"mtime":1646275358000,"results":"14","hashOfConfig":"11"},{"size":1487,"mtime":1646887024429,"results":"15","hashOfConfig":"11"},{"size":1175,"mtime":1646886029126,"results":"16","hashOfConfig":"11"},{"size":1208,"mtime":1646887434688,"results":"17","hashOfConfig":"11"},{"size":1721,"mtime":1646887405805,"results":"18","hashOfConfig":"11"},{"size":827,"mtime":1646887006913,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"aai2l4",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"23"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/leegihun/Documents/JS_Practice/ToDoList/src/index.tsx",[],[],["50","51"],"/Users/leegihun/Documents/JS_Practice/ToDoList/src/theme.ts",[],[],"/Users/leegihun/Documents/JS_Practice/ToDoList/src/App.tsx",[],[],"/Users/leegihun/Documents/JS_Practice/ToDoList/src/GlobalStyle.ts",[],[],"/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDoList.tsx",["52","53","54","55","56","57"],[],"/Users/leegihun/Documents/JS_Practice/ToDoList/src/atoms.ts",[],[],"/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/CreateToDo.tsx",["58","59","60"],[],"import { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { categoryState, customCategoryState, toDoState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n  category: string;\n}\nfunction CreateToDo() {\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n\n  useEffect(() => {\n    localStorage.setItem(\"storedToDo\", JSON.stringify(toDos));\n  }, [toDos]);\n\n  const onValid = (TODOS: IForm) => {\n    setToDos((prev) => [\n      {\n        text: TODOS.toDo,\n        id: Date.now(),\n        category,\n      },\n      ...prev,\n    ]);\n\n    // hook-form의 객체 중  \"toDo\" 프로퍼티의 값을 변경\n    setValue(\"toDo\", \"\");\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onValid)}>\n        <input\n          placeholder=\"What to do?\"\n          {...register(\"toDo\", {\n            required: true,\n            minLength: { value: 5, message: \"too short\" },\n          })}\n        />\n        <button>Add</button>\n      </form>\n    </>\n  );\n}\n\nexport default CreateToDo;\n","/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/ToDo.tsx",["61","62","63","64","65","66"],[],"import React from \"react\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { customCategoryState, IToDo, toDoState } from \"../atoms\";\n\nconst CustomCategory = styled.button`\n  border-radius: 50%;\n  background-color: whitesmoke;\n`;\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const [categories, setCustomeCategory] = useRecoilState(customCategoryState);\n\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((prev) => {\n      const index = prev.findIndex((toDo) => toDo.id === id);\n\n      const front = prev.slice(0, index);\n      const back = prev.slice(index + 1);\n      const newToDo = { text, id, category: name as any };\n      const newArr = [...front, newToDo, ...back];\n      return newArr;\n    });\n  };\n\n  const onDelete = () => {\n    setToDos((prev) => {\n      const targetIndex = prev.findIndex((toDo) => toDo.id === id);\n      const copyToDos = [...prev];\n      copyToDos.splice(targetIndex, 1);\n      return copyToDos;\n    });\n  };\n  return (\n    <>\n      <li>\n        <span>* {text}</span>\n        {category !== \"DOING\" && (\n          <button name={\"DOING\"} onClick={onClick}>\n            Doing\n          </button>\n        )}\n        {category !== \"TODO\" && (\n          <button name={\"TODO\"} onClick={onClick}>\n            To Do\n          </button>\n        )}\n        {category !== \"DONE\" && (\n          <button name={\"DONE\"} onClick={onClick}>\n            Done\n          </button>\n        )}\n        <button onClick={onDelete}>X</button>\n      </li>\n    </>\n  );\n}\n\nexport default ToDo;\n","/Users/leegihun/Documents/JS_Practice/ToDoList/src/components/CreateNewCategory.tsx",[],[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":28,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"75","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":17},{"ruleId":"71","severity":1,"message":"76","line":4,"column":3,"nodeType":"73","messageId":"74","endLine":4,"endColumn":7},{"ruleId":"71","severity":1,"message":"77","line":7,"column":3,"nodeType":"73","messageId":"74","endLine":7,"endColumn":20},{"ruleId":"71","severity":1,"message":"78","line":23,"column":29,"nodeType":"73","messageId":"74","endLine":23,"endColumn":46},{"ruleId":"79","severity":1,"message":"80","line":31,"column":6,"nodeType":"81","endLine":31,"endColumn":8,"suggestions":"82"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":21,"nodeType":"73","messageId":"74","endLine":1,"endColumn":29},{"ruleId":"71","severity":1,"message":"77","line":3,"column":42,"nodeType":"73","messageId":"74","endLine":3,"endColumn":59},{"ruleId":"71","severity":1,"message":"83","line":4,"column":25,"nodeType":"73","messageId":"74","endLine":4,"endColumn":44},{"ruleId":"71","severity":1,"message":"84","line":2,"column":26,"nodeType":"73","messageId":"74","endLine":2,"endColumn":40},{"ruleId":"71","severity":1,"message":"77","line":2,"column":42,"nodeType":"73","messageId":"74","endLine":2,"endColumn":59},{"ruleId":"71","severity":1,"message":"85","line":6,"column":7,"nodeType":"73","messageId":"74","endLine":6,"endColumn":21},{"ruleId":"71","severity":1,"message":"86","line":12,"column":10,"nodeType":"73","messageId":"74","endLine":12,"endColumn":15},{"ruleId":"71","severity":1,"message":"87","line":13,"column":10,"nodeType":"73","messageId":"74","endLine":13,"endColumn":20},{"ruleId":"71","severity":1,"message":"88","line":13,"column":22,"nodeType":"73","messageId":"74","endLine":13,"endColumn":40},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useForm' is defined but never used.","'atom' is defined but never used.","'useSetRecoilState' is defined but never used.","'setCustomCategory' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setToDos' and 'toDos.length'. Either include them or remove the dependency array.","ArrayExpression",["91"],"'customCategoryState' is defined but never used.","'useRecoilValue' is defined but never used.","'CustomCategory' is assigned a value but never used.","'toDos' is assigned a value but never used.","'categories' is assigned a value but never used.","'setCustomeCategory' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [setToDos, toDos.length]",{"range":"94","text":"95"},[895,897],"[setToDos, toDos.length]"]